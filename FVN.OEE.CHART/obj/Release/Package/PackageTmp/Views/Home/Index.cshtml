@{
    ViewBag.Title = "Home Page";
    System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    var dataTime = serializer.Serialize(ViewBag.Time);
    var dataOEE = serializer.Serialize(ViewBag.Data);
}

<div class="row">
    <div class="col-md-6 mt-2">
        <div id="plan-oee"></div>
    </div>
    <div class="col-md-6 mt-2">

        <div class="row">
            <div class="col-md-10">
                <div id="main-production"></div>
            </div>
            <div class="col-md-2">
                @if (ViewBag.OEE != null)
                {
                    <strong>OEE</strong>
                <strong class="total">@ViewBag.OEE%</strong>
                }
            </div>
        </div>
    </div>
    <div class="col-md-6 mt-2">
        <div class="row">
            <div class="col-md-4">
                <div id="availability"></div>
            </div>
            <div class="col-md-4">
                <div id="performance"></div>
            </div>
            <div class="col-md-4">
                <div id="quality"></div>
            </div>
        </div>
    </div>
    <div class="col-md-6 mt-2" style="position: relative; ">
        <div class="row">
            <div class="col-md-10">
                <div id="heel-counter"></div>
            </div>
            <div class="col-md-2">
                @if (ViewBag.OEE_HC != null)
                {
                    <strong>OEE</strong>
                    <strong class="total">@ViewBag.OEE_HC%</strong>
                }
            </div>
        </div>
    </div>
</div>

@section scripts {

    <script type="text/javascript">
        // Create the chart main-production
        var colors = Highcharts.getOptions().colors;
        //Create chart plan-oee
        Highcharts.chart('plan-oee', {
            chart: {
                type: 'line'
            },
            title: {
                text: '<h1><b>Plant OEE</b></h1>'
            },
            xAxis: {
                categories:@Html.Raw(dataTime),
            },
            yAxis: {
                title: {
                    text: 'Percent (%)'
                },
                 plotLines: [{
                    value: 84,
                    color: 'red',
                    width: 1,
                    label: {
                    text: 'Target: 84%',
                    align: 'left',
                style: {
                    color: 'black'
                }
            }
        }]
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: false
                }
            },
            series: [{
                name: 'OEE',
                data:@dataOEE,
    }]
        });
        //Create chart main-production
        Highcharts.chart('main-production', {
            colors: ['#99FFFF','#99FFFF  ','#99FFFF '],//Set corlor for three chart colums
            chart: {
                type: 'column',
            },
            title: {
                text: '<h1><b>MAIN PRODUCTION</b></h1>'
            },
            subtitle: {
                text: 'A, P, Q of Main Production'
            },
             xAxis: {
                type: 'category'// Show title colum X
             },
             yAxis: {
                title: {
                    text: 'Total percent OEE'
                 },
            },
           legend: {
                enabled: false // Enabled click vào button affter hide Chart
            },
           plotOptions: {
            series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                format: '{point.y:.1f}%'
            }
        }
           },// Enable show percen top chart
           tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'
            },
           series: [
                {
                    name: "OEE",
                    colorByPoint: true,
                    data:  @Html.Raw(ViewBag.DataPointsColumns),
                }
            ],
           drilldown: {
                series: @Html.Raw(ViewBag.DataPointsColumns),
            }
        });

        // Create the chart heel counter
        Highcharts.chart('heel-counter', {
             colors: ['#99FFFF','#99FFFF  ','#99FFFF '],//Set corlor for three chart colums
            chart: {
                type: 'column'
            },
            title: {
                text: '<h1><b>HEEL COUNTER</b></h1>'
            },
            subtitle: {
                text: 'Average Cycle Time'
            },
               xAxis: {
            type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total percent OEE',
                    plotLines: [{
                    value: 84,
                    color: 'red',
                    width: 1,
                    label: {
                    text: 'Target: 84',
                    align: 'left',

                style: {
                    color: 'yellow'
                }
            }
                 }],
                }
            },
            legend: {
                enabled: false // Enabled click vào button affter hide Chart
            },
           plotOptions: {
            series: {
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                format: '{point.y:.1f}s'
            }
        }
           },// Enable show percen top chart
            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'
            },
            series: [
                {
                    name: "OEE",
                    colorByPoint: true,
                    data: @Html.Raw(ViewBag.DataPointsHC),
                }
            ],
            drilldown: {
                series: @Html.Raw(ViewBag.DataPointsHC),
            }
        });

        //Create chart availability
        Highcharts.chart('availability', {
            chart: {
        type: 'gauge',
        plotBackgroundColor: null,
         plotBackgroundImage: null,
        plotBorderWidth: 0,
         plotShadow: false
         },
            title: {
                text: '<h1><b>AVAILABILITY</b></h1>'
            },
            pane: {
             startAngle: -150,
             endAngle: 150,
             background: [{
            backgroundColor: {
            linearGradient: {
                x1: 0,
                y1: 0,
                x2: 0,
                y2: 1
          },
          stops: [
            [0, '#FFF'],
            [1, '#333']
          ]
        },
        borderWidth: 1,
        outerRadius: '109%'
      }, {
        backgroundColor: {
          linearGradient: {
            x1: 0,
            y1: 0,
            x2: 0,
            y2: 1
          },
          stops: [
            [0, '#333'],
            [1, '#FFF']
          ]
        },
        borderWidth: 1,
        outerRadius: '107%'
      }, {
        // default background
          backgroundColor: '#DDD',
      }, {
        backgroundColor: '#DDD',
        borderWidth: 0,
        outerRadius: '105%',
        innerRadius: '103%'
      }]
    },
            // the value axis
            yAxis: {
                min: 0,
                max: 100,
                minorTickInterval: 'auto',
                minorTickWidth: 1,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',

                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 10,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: 'Availability'
                },
                plotBands: [{
                    from: 85,
                    to: 100,
                    color: '#55BF3B' // green
                }, {
                    from: 85,
                    to: 60,
                    color: '#DDDF0D' // yellow
                }, {
                    from: 0,
                    to: 60,
                    color: '#DF5353' // red
                }]
            },

            series: [{
                name: 'Speed',
                data: [@ViewBag.Availability],//Start
                tooltip: {
                    valueSuffix: 'Availability' // Tooltip text
                }
            }]

        },
            function (chart) {
                if (!chart.renderer.forExport) {
                   $.ajax({
                    type: "POST",
                    url: "/Home/GetDataPlantOEE",
                    content: "application/json; charset=utf-8",
                    dataType: "json",
                        success: function (d) {
                            var point = chart.series[0].points[0],
                            newVal,
                            inc = @ViewBag.Availability;
                            point.update(newVal);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        return false;
                    }
                });
                }
            });
    </script>

    <script type="text/javascript">
        //Create chart performance
        Highcharts.chart('performance', {
            chart: {
                type: 'gauge',
            },
            title: {
                text: '<h1><b>Performance</b></h1>'
            },
            pane: {
                startAngle: -150,
                endAngle: 150,
            },
            // the value axis
            yAxis: {
                min: 0,
                max: 100,
                minorTickInterval: 'auto',
                minorTickWidth: 1,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',

                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 10,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: 'performance'
                },
                plotBands: [{
                    from: 85,
                    to: 100,
                    color: '#55BF3B' // green
                }, {
                    from: 85,
                    to: 60,
                    color: '#DDDF0D' // yellow
                }, {
                    from: 0,
                    to: 60,
                    color: '#DF5353' // red
                }]
            },

            series: [{
                name: 'Speed',
                data: [@ViewBag.Performance],//Start
                tooltip: {
                    valueSuffix: 'Performance' // Tooltip text
                }
            }]

        },
           function (chart) {
                if (!chart.renderer.forExport) {
                     $.ajax({
                    type: "POST",
                    url: "/Home/GetDataPlantOEE",
                    content: "application/json; charset=utf-8",
                    dataType: "json",
                        success: function (d) {
                            var point = chart.series[0].points[0],
                            newVal,
                            inc = @ViewBag.Performance;
                            point.update(newVal);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        return false;
                    }
                });
                }
            });
    </script>

    <script type="text/javascript">
        //Create chart quality
        Highcharts.chart('quality', {
            chart: {
                type: 'gauge',
            },
            title: {
                text: '<h1><b>Quality</b></h1>'
            },
            pane: {
                startAngle: -150,
                endAngle: 150,
            },

            // the value axis
            yAxis: {
                min: 0,
                max: 100,
                minorTickInterval: 'auto',
                minorTickWidth: 1,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',

                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 10,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: 'Quality'
                },
                plotBands: [{
                    from: 85,
                    to: 100,
                    color: '#55BF3B' // green
                }, {
                    from: 85,
                    to: 60,
                    color: '#DDDF0D' // yellow
                }, {
                    from: 0,
                    to: 60,
                    color: '#DF5353' // red
                }]
            },

            series: [{
                name: 'Speed',
                data: [@ViewBag.Quality],//Start
                tooltip: {
                    valueSuffix: 'Quality' // Tooltip text
                }
            }]

        },
           function (chart) {
                if (!chart.renderer.forExport) {
                    setInterval(function () {
                    $.ajax({
                    type: "POST",
                    url: "/Home/GetDataPlantOEE",
                    content: "application/json; charset=utf-8",
                    dataType: "json",
                        success: function (d) {
                            var point = chart.series[0].points[0],
                            newVal,
                            inc = @ViewBag.Quality;
                            point.update(newVal);
                            window.location.reload();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        return false;
                    }
                });
                    }, 1800000);
                }
            });
    </script>

}
